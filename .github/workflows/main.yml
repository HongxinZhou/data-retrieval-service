name: Create and publish a release

# Configures this workflow to run every time a semver tag is pushed.
on:
  push:
    tags: [
        "[0-9]+.[0-9]+.[0-9]+", # Match 1.1.112 etc.
        "[0-9]+.[0-9]+.[0-9]+-[a-z0-9]+", # Match 1.1.112-alpha etc.
        "[0-9]+.[0-9]+.[0-9]+-[a-z0-9]+.[0-9]+", # Match 1.1.112-alpha.0 etc.
      ]
  workflow_dispatch:
permissions: read-all

env:
  AWS_REGION: ap-southeast-2
  AWS_REGISTRY: 154702947287.dkr.ecr.ap-southeast-2.amazonaws.com
  AWS_IMAGE_NAME: data-retrival-service

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      ## Build ##
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: optimizedBuildNativeLayersTask optimizedDockerPrepareContext

      ## Login ##
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true
      - name: Log in to the ECR registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_REGISTRY }}

      ## Configure metadata and release ##
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
     
      - name: Extract metadata (tags, labels) for ECR
        id: ecr-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AWS_REGISTRY }}/${{ env.AWS_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./build/docker/native-optimized
          file: ./build/docker/native-optimized/DockerfileNative
          push: true
          tags: |
            ${{ steps.ecr-meta.outputs.tags }}
          labels: |
            ${{ steps.ecr-meta.outputs.labels }}
